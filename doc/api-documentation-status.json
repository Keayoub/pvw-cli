{
  "summary": {
    "total_modules": 20,
    "total_methods": 624,
    "documented_methods": 553
  },
  "modules": {
    "_entity.py": {
      "file_path": "purviewcli\\client\\_entity.py",
      "classes": [
        "Entity"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "entityCreateOrUpdate",
          "line": 67,
          "signature": "def entityCreateOrUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityCreate",
          "line": 142,
          "signature": "def entityCreate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityRead",
          "line": 214,
          "signature": "def entityRead(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityUpdate",
          "line": 278,
          "signature": "def entityUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityDelete",
          "line": 347,
          "signature": "def entityDelete(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityUpdateAttribute",
          "line": 405,
          "signature": "def entityUpdateAttribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityReadHeader",
          "line": 482,
          "signature": "def entityReadHeader(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityBulkCreateOrUpdate",
          "line": 552,
          "signature": "def entityBulkCreateOrUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityCreateBulk",
          "line": 628,
          "signature": "def entityCreateBulk(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityDeleteBulk",
          "line": 700,
          "signature": "def entityDeleteBulk(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityReadBulk",
          "line": 758,
          "signature": "def entityReadBulk(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityReadUniqueAttribute",
          "line": 825,
          "signature": "def entityReadUniqueAttribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityReadBulkUniqueAttribute",
          "line": 892,
          "signature": "def entityReadBulkUniqueAttribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityUpdateUniqueAttribute",
          "line": 964,
          "signature": "def entityUpdateUniqueAttribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityDeleteUniqueAttribute",
          "line": 1041,
          "signature": "def entityDeleteUniqueAttribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityReadClassification",
          "line": 1106,
          "signature": "def entityReadClassification(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityDeleteClassification",
          "line": 1168,
          "signature": "def entityDeleteClassification(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityReadClassifications",
          "line": 1228,
          "signature": "def entityReadClassifications(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityCreateClassifications",
          "line": 1288,
          "signature": "def entityCreateClassifications(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityUpdateClassifications",
          "line": 1363,
          "signature": "def entityUpdateClassifications(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityBulkSetClassifications",
          "line": 1435,
          "signature": "def entityBulkSetClassifications(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityBulkClassification",
          "line": 1507,
          "signature": "def entityBulkClassification(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityDeleteClassificationByUniqueAttribute",
          "line": 1568,
          "signature": "def entityDeleteClassificationByUniqueAttribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityUpdateClassificationsByUniqueAttribute",
          "line": 1631,
          "signature": "def entityUpdateClassificationsByUniqueAttribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityCreateClassificationsByUniqueAttribute",
          "line": 1708,
          "signature": "def entityCreateClassificationsByUniqueAttribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityCreateBusinessMetadata",
          "line": 1790,
          "signature": "def entityCreateBusinessMetadata(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityDeleteBusinessMetadata",
          "line": 1865,
          "signature": "def entityDeleteBusinessMetadata(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityCreateBusinessMetadataAttributes",
          "line": 1940,
          "signature": "def entityCreateBusinessMetadataAttributes(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityDeleteBusinessMetadataAttributes",
          "line": 2017,
          "signature": "def entityDeleteBusinessMetadataAttributes(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityImportBusinessMetadata",
          "line": 2080,
          "signature": "def entityImportBusinessMetadata(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityReadBusinessMetadataTemplate",
          "line": 2140,
          "signature": "def entityReadBusinessMetadataTemplate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityAddOrUpdateBusinessMetadata",
          "line": 2200,
          "signature": "def entityAddOrUpdateBusinessMetadata(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityAddOrUpdateBusinessMetadataAttributes",
          "line": 2271,
          "signature": "def entityAddOrUpdateBusinessMetadataAttributes(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityRemoveBusinessMetadata",
          "line": 2342,
          "signature": "def entityRemoveBusinessMetadata(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityRemoveBusinessMetadataAttributes",
          "line": 2397,
          "signature": "def entityRemoveBusinessMetadataAttributes(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityCreateLabels",
          "line": 2455,
          "signature": "def entityCreateLabels(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityUpdateLabels",
          "line": 2530,
          "signature": "def entityUpdateLabels(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityDeleteLabels",
          "line": 2602,
          "signature": "def entityDeleteLabels(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityCreateLabelsByUniqueAttribute",
          "line": 2663,
          "signature": "def entityCreateLabelsByUniqueAttribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityUpdateLabelsByUniqueAttribute",
          "line": 2743,
          "signature": "def entityUpdateLabelsByUniqueAttribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityDeleteLabelsByUniqueAttribute",
          "line": 2820,
          "signature": "def entityDeleteLabelsByUniqueAttribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityMoveToCollection",
          "line": 2886,
          "signature": "def entityMoveToCollection(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityReadHistory",
          "line": 2942,
          "signature": "def entityReadHistory(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityReadAudit",
          "line": 3006,
          "signature": "def entityReadAudit(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityValidate",
          "line": 3071,
          "signature": "def entityValidate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityReadDependencies",
          "line": 3125,
          "signature": "def entityReadDependencies(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityReadUsage",
          "line": 3205,
          "signature": "def entityReadUsage(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityPut",
          "line": 3272,
          "signature": "def entityPut(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityPutClassifications",
          "line": 3341,
          "signature": "def entityPutClassifications(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityPartialUpdateByUniqueAttribute",
          "line": 3410,
          "signature": "def entityPartialUpdateByUniqueAttribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "entityPartialUpdateAttribute",
          "line": 3479,
          "signature": "def entityPartialUpdateAttribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        }
      ]
    },
    "_glossary.py": {
      "file_path": "purviewcli\\client\\_glossary.py",
      "classes": [
        "Glossary"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "glossaryRead",
          "line": 30,
          "signature": "def glossaryRead(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryCreate",
          "line": 99,
          "signature": "def glossaryCreate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryUpdate",
          "line": 177,
          "signature": "def glossaryUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryDelete",
          "line": 249,
          "signature": "def glossaryDelete(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadDetailed",
          "line": 307,
          "signature": "def glossaryReadDetailed(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadPartial",
          "line": 384,
          "signature": "def glossaryReadPartial(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadCategories",
          "line": 446,
          "signature": "def glossaryReadCategories(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryCreateCategories",
          "line": 511,
          "signature": "def glossaryCreateCategories(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryCreateCategory",
          "line": 592,
          "signature": "def glossaryCreateCategory(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadCategory",
          "line": 670,
          "signature": "def glossaryReadCategory(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryUpdateCategory",
          "line": 735,
          "signature": "def glossaryUpdateCategory(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryDeleteCategory",
          "line": 807,
          "signature": "def glossaryDeleteCategory(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadCategoryPartial",
          "line": 865,
          "signature": "def glossaryReadCategoryPartial(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryUpdateCategoryPartial",
          "line": 925,
          "signature": "def glossaryUpdateCategoryPartial(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadCategoryRelated",
          "line": 997,
          "signature": "def glossaryReadCategoryRelated(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadCategoryTerms",
          "line": 1061,
          "signature": "def glossaryReadCategoryTerms(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadCategoriesByGlossary",
          "line": 1126,
          "signature": "def glossaryReadCategoriesByGlossary(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadCategoriesHeaders",
          "line": 1191,
          "signature": "def glossaryReadCategoriesHeaders(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadTerms",
          "line": 1258,
          "signature": "def glossaryReadTerms(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryCreateTerms",
          "line": 1325,
          "signature": "def glossaryCreateTerms(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryCreateTerm",
          "line": 1406,
          "signature": "def glossaryCreateTerm(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadTerm",
          "line": 1484,
          "signature": "def glossaryReadTerm(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryUpdateTerm",
          "line": 1547,
          "signature": "def glossaryUpdateTerm(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryDeleteTerm",
          "line": 1619,
          "signature": "def glossaryDeleteTerm(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadTermPartial",
          "line": 1677,
          "signature": "def glossaryReadTermPartial(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryUpdateTermPartial",
          "line": 1737,
          "signature": "def glossaryUpdateTermPartial(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadTermAssignedEntities",
          "line": 1809,
          "signature": "def glossaryReadTermAssignedEntities(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryCreateTermAssignedEntities",
          "line": 1873,
          "signature": "def glossaryCreateTermAssignedEntities(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryDeleteTermAssignedEntities",
          "line": 1948,
          "signature": "def glossaryDeleteTermAssignedEntities(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadTermRelated",
          "line": 2007,
          "signature": "def glossaryReadTermRelated(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadRelatedTerms",
          "line": 2071,
          "signature": "def glossaryReadRelatedTerms(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadTermsByGlossary",
          "line": 2135,
          "signature": "def glossaryReadTermsByGlossary(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadTermsHeaders",
          "line": 2200,
          "signature": "def glossaryReadTermsHeaders(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryExportTerms",
          "line": 2266,
          "signature": "def glossaryExportTerms(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryImportTerms",
          "line": 2329,
          "signature": "def glossaryImportTerms(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryImportTermsByName",
          "line": 2389,
          "signature": "def glossaryImportTermsByName(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadImportOperation",
          "line": 2449,
          "signature": "def glossaryReadImportOperation(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadAnalytics",
          "line": 2511,
          "signature": "def glossaryReadAnalytics(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadTermUsageStatistics",
          "line": 2576,
          "signature": "def glossaryReadTermUsageStatistics(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadApprovalWorkflow",
          "line": 2641,
          "signature": "def glossaryReadApprovalWorkflow(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryCreateApprovalWorkflow",
          "line": 2701,
          "signature": "def glossaryCreateApprovalWorkflow(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryValidateTerm",
          "line": 2776,
          "signature": "def glossaryValidateTerm(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadTemplates",
          "line": 2830,
          "signature": "def glossaryReadTemplates(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryReadTermTemplates",
          "line": 2894,
          "signature": "def glossaryReadTermTemplates(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryPutCategory",
          "line": 2960,
          "signature": "def glossaryPutCategory(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryPutCategoryPartial",
          "line": 3029,
          "signature": "def glossaryPutCategoryPartial(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryPutTerm",
          "line": 3098,
          "signature": "def glossaryPutTerm(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "glossaryPutTermPartial",
          "line": 3167,
          "signature": "def glossaryPutTermPartial(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        }
      ]
    },
    "_collections.py": {
      "file_path": "purviewcli\\client\\_collections.py",
      "classes": [
        "Collections"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "collectionsRead",
          "line": 30,
          "signature": "def collectionsRead(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsCreate",
          "line": 98,
          "signature": "def collectionsCreate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsUpdate",
          "line": 173,
          "signature": "def collectionsUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsDelete",
          "line": 242,
          "signature": "def collectionsDelete(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsReadPath",
          "line": 302,
          "signature": "def collectionsReadPath(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsReadChildNames",
          "line": 362,
          "signature": "def collectionsReadChildNames(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsMove",
          "line": 424,
          "signature": "def collectionsMove(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsReadPermissions",
          "line": 483,
          "signature": "def collectionsReadPermissions(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsUpdatePermissions",
          "line": 546,
          "signature": "def collectionsUpdatePermissions(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsReadAnalytics",
          "line": 618,
          "signature": "def collectionsReadAnalytics(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsExport",
          "line": 684,
          "signature": "def collectionsExport(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsReadHierarchy",
          "line": 750,
          "signature": "def collectionsReadHierarchy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsReadTree",
          "line": 815,
          "signature": "def collectionsReadTree(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsSearch",
          "line": 882,
          "signature": "def collectionsSearch(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsReadByEntity",
          "line": 947,
          "signature": "def collectionsReadByEntity(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsBulkMove",
          "line": 1012,
          "signature": "def collectionsBulkMove(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsBulkUpdate",
          "line": 1072,
          "signature": "def collectionsBulkUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsBulkDelete",
          "line": 1144,
          "signature": "def collectionsBulkDelete(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsImport",
          "line": 1205,
          "signature": "def collectionsImport(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsValidate",
          "line": 1269,
          "signature": "def collectionsValidate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsReadStatistics",
          "line": 1325,
          "signature": "def collectionsReadStatistics(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsGenerateReport",
          "line": 1389,
          "signature": "def collectionsGenerateReport(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsCreateOrUpdate",
          "line": 1449,
          "signature": "def collectionsCreateOrUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsPut",
          "line": 1521,
          "signature": "def collectionsPut(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsGet",
          "line": 1590,
          "signature": "def collectionsGet(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsGetPath",
          "line": 1648,
          "signature": "def collectionsGetPath(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "collectionsGetChildNames",
          "line": 1706,
          "signature": "def collectionsGetChildNames(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        }
      ]
    },
    "_domain.py": {
      "file_path": "purviewcli\\client\\_domain.py",
      "classes": [
        "Domain"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "domainsList",
          "line": 22,
          "signature": "def domainsList(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "domainsCreate",
          "line": 87,
          "signature": "def domainsCreate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "domainsGet",
          "line": 163,
          "signature": "def domainsGet(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "domainsUpdate",
          "line": 226,
          "signature": "def domainsUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "domainsDelete",
          "line": 299,
          "signature": "def domainsDelete(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_api_version",
          "line": 359,
          "signature": "def get_api_version(self)",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": false
        },
        {
          "name": "get_api_version_params",
          "line": 363,
          "signature": "def get_api_version_params(self)",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": false
        }
      ]
    },
    "_lineage.py": {
      "file_path": "purviewcli\\client\\_lineage.py",
      "classes": [
        "Lineage"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "lineageRead",
          "line": 34,
          "signature": "def lineageRead(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageReadUniqueAttribute",
          "line": 101,
          "signature": "def lineageReadUniqueAttribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageReadNextPage",
          "line": 169,
          "signature": "def lineageReadNextPage(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageReadUpstream",
          "line": 237,
          "signature": "def lineageReadUpstream(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageReadDownstream",
          "line": 302,
          "signature": "def lineageReadDownstream(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageReadGraph",
          "line": 381,
          "signature": "def lineageReadGraph(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageCreate",
          "line": 447,
          "signature": "def lineageCreate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageUpdate",
          "line": 522,
          "signature": "def lineageUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageDelete",
          "line": 594,
          "signature": "def lineageDelete(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageValidate",
          "line": 652,
          "signature": "def lineageValidate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageReadImpactAnalysis",
          "line": 706,
          "signature": "def lineageReadImpactAnalysis(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageReadTemporal",
          "line": 772,
          "signature": "def lineageReadTemporal(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageCreateBulk",
          "line": 841,
          "signature": "def lineageCreateBulk(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageCSVProcess",
          "line": 1079,
          "signature": "def lineageCSVProcess(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageCSVValidate",
          "line": 1143,
          "signature": "def lineageCSVValidate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageCSVSample",
          "line": 1246,
          "signature": "def lineageCSVSample(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageCSVTemplates",
          "line": 1312,
          "signature": "def lineageCSVTemplates(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageReadAnalytics",
          "line": 1383,
          "signature": "def lineageReadAnalytics(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageGenerateReport",
          "line": 1449,
          "signature": "def lineageGenerateReport(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageSearch",
          "line": 1509,
          "signature": "def lineageSearch(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageReadByGuid",
          "line": 1576,
          "signature": "def lineageReadByGuid(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageReadByUniqueAttribute",
          "line": 1634,
          "signature": "def lineageReadByUniqueAttribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "lineageReadNext",
          "line": 1692,
          "signature": "def lineageReadNext(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        }
      ]
    },
    "_scan.py": {
      "file_path": "purviewcli\\client\\_scan.py",
      "classes": [
        "Scan"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "scanDataSourcesRead",
          "line": 29,
          "signature": "def scanDataSourcesRead(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanDataSourceCreate",
          "line": 93,
          "signature": "def scanDataSourceCreate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanDataSourceRead",
          "line": 168,
          "signature": "def scanDataSourceRead(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanDataSourceUpdate",
          "line": 228,
          "signature": "def scanDataSourceUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanDataSourceDelete",
          "line": 297,
          "signature": "def scanDataSourceDelete(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanRead",
          "line": 357,
          "signature": "def scanRead(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanCreate",
          "line": 422,
          "signature": "def scanCreate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanUpdate",
          "line": 499,
          "signature": "def scanUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanDelete",
          "line": 568,
          "signature": "def scanDelete(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanRun",
          "line": 630,
          "signature": "def scanRun(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanReadResult",
          "line": 693,
          "signature": "def scanReadResult(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanCancel",
          "line": 760,
          "signature": "def scanCancel(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanRuleSetRead",
          "line": 817,
          "signature": "def scanRuleSetRead(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanRuleSetCreate",
          "line": 880,
          "signature": "def scanRuleSetCreate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanRuleSetUpdate",
          "line": 955,
          "signature": "def scanRuleSetUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanRuleSetDelete",
          "line": 1024,
          "signature": "def scanRuleSetDelete(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanClassificationRuleRead",
          "line": 1097,
          "signature": "def scanClassificationRuleRead(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanClassificationRuleCreate",
          "line": 1162,
          "signature": "def scanClassificationRuleCreate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanClassificationRuleUpdate",
          "line": 1239,
          "signature": "def scanClassificationRuleUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanClassificationRuleDelete",
          "line": 1308,
          "signature": "def scanClassificationRuleDelete(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanClassificationRuleReadVersions",
          "line": 1368,
          "signature": "def scanClassificationRuleReadVersions(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanClassificationRuleTagVersion",
          "line": 1430,
          "signature": "def scanClassificationRuleTagVersion(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanReadAnalytics",
          "line": 1493,
          "signature": "def scanReadAnalytics(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanReadHistory",
          "line": 1560,
          "signature": "def scanReadHistory(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanScheduleCreate",
          "line": 1629,
          "signature": "def scanScheduleCreate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanScheduleRead",
          "line": 1706,
          "signature": "def scanScheduleRead(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanScheduleUpdate",
          "line": 1768,
          "signature": "def scanScheduleUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanScheduleDelete",
          "line": 1842,
          "signature": "def scanScheduleDelete(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanReadStatus",
          "line": 1904,
          "signature": "def scanReadStatus(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanGenerateReport",
          "line": 1967,
          "signature": "def scanGenerateReport(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanExportResults",
          "line": 2024,
          "signature": "def scanExportResults(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanCreateOrUpdateDataSource",
          "line": 2089,
          "signature": "def scanCreateOrUpdateDataSource(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanPutDataSource",
          "line": 2161,
          "signature": "def scanPutDataSource(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanTrigger",
          "line": 2230,
          "signature": "def scanTrigger(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanReadResults",
          "line": 2281,
          "signature": "def scanReadResults(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanCreateOrUpdate",
          "line": 2339,
          "signature": "def scanCreateOrUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanPut",
          "line": 2411,
          "signature": "def scanPut(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanReadRuleset",
          "line": 2480,
          "signature": "def scanReadRuleset(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "scanCreateRuleset",
          "line": 2538,
          "signature": "def scanCreateRuleset(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        }
      ]
    },
    "_search.py": {
      "file_path": "purviewcli\\client\\_search.py",
      "classes": [
        "Search"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "searchQuery",
          "line": 30,
          "signature": "def searchQuery(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchSuggest",
          "line": 141,
          "signature": "def searchSuggest(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchAutocomplete",
          "line": 211,
          "signature": "def searchAutocomplete(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchBrowse",
          "line": 281,
          "signature": "def searchBrowse(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchAdvanced",
          "line": 350,
          "signature": "def searchAdvanced(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchFaceted",
          "line": 409,
          "signature": "def searchFaceted(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchSave",
          "line": 483,
          "signature": "def searchSave(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchReadSaved",
          "line": 542,
          "signature": "def searchReadSaved(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchDeleteSaved",
          "line": 606,
          "signature": "def searchDeleteSaved(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchReadAnalytics",
          "line": 666,
          "signature": "def searchReadAnalytics(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchReadTemplates",
          "line": 731,
          "signature": "def searchReadTemplates(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchReadConfiguration",
          "line": 797,
          "signature": "def searchReadConfiguration(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchUpdateConfiguration",
          "line": 856,
          "signature": "def searchUpdateConfiguration(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchReadIndexStatus",
          "line": 928,
          "signature": "def searchReadIndexStatus(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchRebuildIndex",
          "line": 987,
          "signature": "def searchRebuildIndex(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchExportResults",
          "line": 1051,
          "signature": "def searchExportResults(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchGenerateReport",
          "line": 1114,
          "signature": "def searchGenerateReport(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchEntities",
          "line": 1195,
          "signature": "def searchEntities(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "querySuggest",
          "line": 1251,
          "signature": "def querySuggest(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "queryAutoComplete",
          "line": 1307,
          "signature": "def queryAutoComplete(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "browseEntity",
          "line": 1363,
          "signature": "def browseEntity(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "searchWithFacets",
          "line": 1419,
          "signature": "def searchWithFacets(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        }
      ]
    },
    "_types.py": {
      "file_path": "purviewcli\\client\\_types.py",
      "classes": [
        "Types"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "typesRead",
          "line": 33,
          "signature": "def typesRead(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadHeaders",
          "line": 97,
          "signature": "def typesReadHeaders(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesCreateBulk",
          "line": 157,
          "signature": "def typesCreateBulk(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesUpdateBulk",
          "line": 232,
          "signature": "def typesUpdateBulk(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesDeleteBulk",
          "line": 304,
          "signature": "def typesDeleteBulk(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadByGuid",
          "line": 365,
          "signature": "def typesReadByGuid(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadByName",
          "line": 425,
          "signature": "def typesReadByName(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesDelete",
          "line": 485,
          "signature": "def typesDelete(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadBusinessMetadataDef",
          "line": 545,
          "signature": "def typesReadBusinessMetadataDef(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadBusinessMetadataDefByGuid",
          "line": 608,
          "signature": "def typesReadBusinessMetadataDefByGuid(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadBusinessMetadataDefByName",
          "line": 668,
          "signature": "def typesReadBusinessMetadataDefByName(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "createBusinessMetadataDef",
          "line": 728,
          "signature": "def createBusinessMetadataDef(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "updateBusinessMetadataDef",
          "line": 803,
          "signature": "def updateBusinessMetadataDef(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "deleteBusinessMetadataDef",
          "line": 875,
          "signature": "def deleteBusinessMetadataDef(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadClassificationDef",
          "line": 943,
          "signature": "def typesReadClassificationDef(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadClassificationDefByGuid",
          "line": 1006,
          "signature": "def typesReadClassificationDefByGuid(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadClassificationDefByName",
          "line": 1066,
          "signature": "def typesReadClassificationDefByName(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadEntityDef",
          "line": 1128,
          "signature": "def typesReadEntityDef(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadEntityDefByGuid",
          "line": 1191,
          "signature": "def typesReadEntityDefByGuid(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadEntityDefByName",
          "line": 1251,
          "signature": "def typesReadEntityDefByName(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadEnumDef",
          "line": 1313,
          "signature": "def typesReadEnumDef(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadEnumDefByGuid",
          "line": 1376,
          "signature": "def typesReadEnumDefByGuid(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadEnumDefByName",
          "line": 1436,
          "signature": "def typesReadEnumDefByName(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadRelationshipDef",
          "line": 1498,
          "signature": "def typesReadRelationshipDef(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadRelationshipDefByGuid",
          "line": 1561,
          "signature": "def typesReadRelationshipDefByGuid(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadRelationshipDefByName",
          "line": 1621,
          "signature": "def typesReadRelationshipDefByName(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadStructDef",
          "line": 1683,
          "signature": "def typesReadStructDef(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadStructDefByGuid",
          "line": 1746,
          "signature": "def typesReadStructDefByGuid(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadStructDefByName",
          "line": 1806,
          "signature": "def typesReadStructDefByName(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadTermTemplateDef",
          "line": 1868,
          "signature": "def typesReadTermTemplateDef(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadTermTemplateDefByGuid",
          "line": 1931,
          "signature": "def typesReadTermTemplateDefByGuid(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadTermTemplateDefByName",
          "line": 1991,
          "signature": "def typesReadTermTemplateDefByName(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesValidate",
          "line": 2053,
          "signature": "def typesValidate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesReadDependencies",
          "line": 2107,
          "signature": "def typesReadDependencies(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesMigrateVersion",
          "line": 2185,
          "signature": "def typesMigrateVersion(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesExport",
          "line": 2243,
          "signature": "def typesExport(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesImport",
          "line": 2307,
          "signature": "def typesImport(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesCreate",
          "line": 2373,
          "signature": "def typesCreate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesUpdate",
          "line": 2445,
          "signature": "def typesUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesDeleteDef",
          "line": 2514,
          "signature": "def typesDeleteDef(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesCreateDef",
          "line": 2570,
          "signature": "def typesCreateDef(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "typesUpdateDef",
          "line": 2642,
          "signature": "def typesUpdateDef(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        }
      ]
    },
    "_unified_catalog.py": {
      "file_path": "purviewcli\\client\\_unified_catalog.py",
      "classes": [
        "UnifiedCatalogClient"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "get_governance_domains",
          "line": 24,
          "signature": "def get_governance_domains(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_governance_domain_by_id",
          "line": 93,
          "signature": "def get_governance_domain_by_id(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "create_governance_domain",
          "line": 182,
          "signature": "def create_governance_domain(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "update_governance_domain",
          "line": 314,
          "signature": "def update_governance_domain(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "delete_governance_domain",
          "line": 420,
          "signature": "def delete_governance_domain(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_data_products",
          "line": 511,
          "signature": "def get_data_products(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_data_product_by_id",
          "line": 577,
          "signature": "def get_data_product_by_id(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "create_data_product",
          "line": 638,
          "signature": "def create_data_product(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "update_data_product",
          "line": 754,
          "signature": "def update_data_product(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "delete_data_product",
          "line": 864,
          "signature": "def delete_data_product(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "create_data_product_relationship",
          "line": 923,
          "signature": "def create_data_product_relationship(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_data_product_relationships",
          "line": 1017,
          "signature": "def get_data_product_relationships(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "delete_data_product_relationship",
          "line": 1087,
          "signature": "def delete_data_product_relationship(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "query_data_products",
          "line": 1154,
          "signature": "def query_data_products(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_terms",
          "line": 1259,
          "signature": "def get_terms(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_terms_from_glossary",
          "line": 1328,
          "signature": "def get_terms_from_glossary(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_term_by_id",
          "line": 1511,
          "signature": "def get_term_by_id(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "create_term",
          "line": 1572,
          "signature": "def create_term(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "update_term",
          "line": 1693,
          "signature": "def update_term(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "delete_term",
          "line": 1857,
          "signature": "def delete_term(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "query_terms",
          "line": 1916,
          "signature": "def query_terms(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_objectives",
          "line": 2089,
          "signature": "def get_objectives(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_objective_by_id",
          "line": 2150,
          "signature": "def get_objective_by_id(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "create_objective",
          "line": 2211,
          "signature": "def create_objective(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "update_objective",
          "line": 2308,
          "signature": "def update_objective(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "delete_objective",
          "line": 2404,
          "signature": "def delete_objective(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "query_objectives",
          "line": 2463,
          "signature": "def query_objectives(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_key_results",
          "line": 2562,
          "signature": "def get_key_results(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_key_result_by_id",
          "line": 2623,
          "signature": "def get_key_result_by_id(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "create_key_result",
          "line": 2685,
          "signature": "def create_key_result(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "update_key_result",
          "line": 2777,
          "signature": "def update_key_result(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "delete_key_result",
          "line": 2868,
          "signature": "def delete_key_result(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_critical_data_elements",
          "line": 2932,
          "signature": "def get_critical_data_elements(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_critical_data_element_by_id",
          "line": 2993,
          "signature": "def get_critical_data_element_by_id(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "create_critical_data_element",
          "line": 3054,
          "signature": "def create_critical_data_element(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "update_critical_data_element",
          "line": 3153,
          "signature": "def update_critical_data_element(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "delete_critical_data_element",
          "line": 3251,
          "signature": "def delete_critical_data_element(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "query_critical_data_elements",
          "line": 3310,
          "signature": "def query_critical_data_elements(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "create_cde_relationship",
          "line": 3405,
          "signature": "def create_cde_relationship(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_cde_relationships",
          "line": 3497,
          "signature": "def get_cde_relationships(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "delete_cde_relationship",
          "line": 3565,
          "signature": "def delete_cde_relationship(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_relationships",
          "line": 3634,
          "signature": "def get_relationships(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "create_relationship",
          "line": 3717,
          "signature": "def create_relationship(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "delete_relationship",
          "line": 3814,
          "signature": "def delete_relationship(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "list_policies",
          "line": 3897,
          "signature": "def list_policies(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_policy",
          "line": 3956,
          "signature": "def get_policy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "create_policy",
          "line": 4017,
          "signature": "def create_policy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "update_policy",
          "line": 4104,
          "signature": "def update_policy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "delete_policy",
          "line": 4189,
          "signature": "def delete_policy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "list_custom_metadata",
          "line": 4252,
          "signature": "def list_custom_metadata(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_custom_metadata",
          "line": 4315,
          "signature": "def get_custom_metadata(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "add_custom_metadata",
          "line": 4380,
          "signature": "def add_custom_metadata(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "update_custom_metadata",
          "line": 4499,
          "signature": "def update_custom_metadata(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "delete_custom_metadata",
          "line": 4614,
          "signature": "def delete_custom_metadata(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "list_custom_attributes",
          "line": 4688,
          "signature": "def list_custom_attributes(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_custom_attribute",
          "line": 4747,
          "signature": "def get_custom_attribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "create_custom_attribute",
          "line": 4808,
          "signature": "def create_custom_attribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "update_custom_attribute",
          "line": 4895,
          "signature": "def update_custom_attribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "delete_custom_attribute",
          "line": 4980,
          "signature": "def delete_custom_attribute(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "help",
          "line": 5043,
          "signature": "def help(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        }
      ]
    },
    "_workflow.py": {
      "file_path": "purviewcli\\client\\_workflow.py",
      "classes": [
        "Workflow"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "workflowListWorkflows",
          "line": 17,
          "signature": "def workflowListWorkflows(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowCreateWorkflow",
          "line": 76,
          "signature": "def workflowCreateWorkflow(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflow",
          "line": 152,
          "signature": "def workflowGetWorkflow(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowUpdateWorkflow",
          "line": 213,
          "signature": "def workflowUpdateWorkflow(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowDeleteWorkflow",
          "line": 286,
          "signature": "def workflowDeleteWorkflow(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowExecuteWorkflow",
          "line": 347,
          "signature": "def workflowExecuteWorkflow(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflowExecution",
          "line": 402,
          "signature": "def workflowGetWorkflowExecution(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowListWorkflowExecutions",
          "line": 464,
          "signature": "def workflowListWorkflowExecutions(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowCancelWorkflowExecution",
          "line": 524,
          "signature": "def workflowCancelWorkflowExecution(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflowRuns",
          "line": 581,
          "signature": "def workflowGetWorkflowRuns(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflowRunDetails",
          "line": 648,
          "signature": "def workflowGetWorkflowRunDetails(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflowHistory",
          "line": 710,
          "signature": "def workflowGetWorkflowHistory(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowListWorkflowTemplates",
          "line": 773,
          "signature": "def workflowListWorkflowTemplates(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflowTemplate",
          "line": 832,
          "signature": "def workflowGetWorkflowTemplate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowCreateWorkflowFromTemplate",
          "line": 893,
          "signature": "def workflowCreateWorkflowFromTemplate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflowTasks",
          "line": 971,
          "signature": "def workflowGetWorkflowTasks(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflowTask",
          "line": 1032,
          "signature": "def workflowGetWorkflowTask(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowUpdateWorkflowTask",
          "line": 1094,
          "signature": "def workflowUpdateWorkflowTask(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowCompleteWorkflowTask",
          "line": 1168,
          "signature": "def workflowCompleteWorkflowTask(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowCreateApprovalWorkflow",
          "line": 1226,
          "signature": "def workflowCreateApprovalWorkflow(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetApprovalRequests",
          "line": 1301,
          "signature": "def workflowGetApprovalRequests(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetApprovalRequest",
          "line": 1365,
          "signature": "def workflowGetApprovalRequest(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowApproveRequest",
          "line": 1426,
          "signature": "def workflowApproveRequest(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowRejectRequest",
          "line": 1484,
          "signature": "def workflowRejectRequest(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowListWorkflowTriggers",
          "line": 1544,
          "signature": "def workflowListWorkflowTriggers(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowCreateWorkflowTrigger",
          "line": 1604,
          "signature": "def workflowCreateWorkflowTrigger(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowDeleteWorkflowTrigger",
          "line": 1680,
          "signature": "def workflowDeleteWorkflowTrigger(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflowActions",
          "line": 1742,
          "signature": "def workflowGetWorkflowActions(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflowConditions",
          "line": 1802,
          "signature": "def workflowGetWorkflowConditions(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowValidateWorkflow",
          "line": 1862,
          "signature": "def workflowValidateWorkflow(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflowMetrics",
          "line": 1918,
          "signature": "def workflowGetWorkflowMetrics(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflowLogs",
          "line": 1981,
          "signature": "def workflowGetWorkflowLogs(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowExportWorkflowLogs",
          "line": 2044,
          "signature": "def workflowExportWorkflowLogs(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowScheduleWorkflow",
          "line": 2111,
          "signature": "def workflowScheduleWorkflow(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflowSchedules",
          "line": 2166,
          "signature": "def workflowGetWorkflowSchedules(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowDeleteWorkflowSchedule",
          "line": 2227,
          "signature": "def workflowDeleteWorkflowSchedule(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowCreateWorkflowVariable",
          "line": 2289,
          "signature": "def workflowCreateWorkflowVariable(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflowVariables",
          "line": 2365,
          "signature": "def workflowGetWorkflowVariables(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowCreateWorkflowVersion",
          "line": 2426,
          "signature": "def workflowCreateWorkflowVersion(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflowVersions",
          "line": 2502,
          "signature": "def workflowGetWorkflowVersions(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowGetWorkflowIntegrations",
          "line": 2565,
          "signature": "def workflowGetWorkflowIntegrations(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowConfigureIntegration",
          "line": 2625,
          "signature": "def workflowConfigureIntegration(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "workflowTestIntegration",
          "line": 2681,
          "signature": "def workflowTestIntegration(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        }
      ]
    },
    "_relationship.py": {
      "file_path": "purviewcli\\client\\_relationship.py",
      "classes": [
        "Relationship"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "relationshipCreate",
          "line": 28,
          "signature": "def relationshipCreate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipRead",
          "line": 103,
          "signature": "def relationshipRead(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipUpdate",
          "line": 166,
          "signature": "def relationshipUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipDelete",
          "line": 238,
          "signature": "def relationshipDelete(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipReadAll",
          "line": 298,
          "signature": "def relationshipReadAll(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipCreateBulk",
          "line": 365,
          "signature": "def relationshipCreateBulk(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipDeleteBulk",
          "line": 440,
          "signature": "def relationshipDeleteBulk(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipReadByEntity",
          "line": 499,
          "signature": "def relationshipReadByEntity(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipValidate",
          "line": 566,
          "signature": "def relationshipValidate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipReadAnalytics",
          "line": 622,
          "signature": "def relationshipReadAnalytics(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipReadStatistics",
          "line": 687,
          "signature": "def relationshipReadStatistics(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipSearch",
          "line": 754,
          "signature": "def relationshipSearch(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipReadByType",
          "line": 820,
          "signature": "def relationshipReadByType(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipExport",
          "line": 888,
          "signature": "def relationshipExport(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipImport",
          "line": 953,
          "signature": "def relationshipImport(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipReadLineage",
          "line": 1019,
          "signature": "def relationshipReadLineage(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipReadImpact",
          "line": 1084,
          "signature": "def relationshipReadImpact(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipReadByGuid",
          "line": 1151,
          "signature": "def relationshipReadByGuid(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipCreateOrUpdate",
          "line": 1209,
          "signature": "def relationshipCreateOrUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "relationshipPut",
          "line": 1285,
          "signature": "def relationshipPut(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        }
      ]
    },
    "_policystore.py": {
      "file_path": "purviewcli\\client\\_policystore.py",
      "classes": [
        "Policystore"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "policystoreReadMetadataRoles",
          "line": 17,
          "signature": "def policystoreReadMetadataRoles(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreReadMetadataPolicy",
          "line": 77,
          "signature": "def policystoreReadMetadataPolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreReadMetadataPolicies",
          "line": 144,
          "signature": "def policystoreReadMetadataPolicies(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystorePutMetadataPolicy",
          "line": 206,
          "signature": "def policystorePutMetadataPolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreDeleteMetadataPolicy",
          "line": 279,
          "signature": "def policystoreDeleteMetadataPolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreReadDataPolicies",
          "line": 340,
          "signature": "def policystoreReadDataPolicies(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreCreateDataPolicy",
          "line": 418,
          "signature": "def policystoreCreateDataPolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreUpdateDataPolicy",
          "line": 494,
          "signature": "def policystoreUpdateDataPolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreDeleteDataPolicy",
          "line": 567,
          "signature": "def policystoreDeleteDataPolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreListDevOpsPolicies",
          "line": 628,
          "signature": "def policystoreListDevOpsPolicies(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreGetDevOpsPolicy",
          "line": 687,
          "signature": "def policystoreGetDevOpsPolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreCreateDevOpsPolicy",
          "line": 748,
          "signature": "def policystoreCreateDevOpsPolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreUpdateDevOpsPolicy",
          "line": 824,
          "signature": "def policystoreUpdateDevOpsPolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreDeleteDevOpsPolicy",
          "line": 897,
          "signature": "def policystoreDeleteDevOpsPolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreListSelfServicePolicies",
          "line": 958,
          "signature": "def policystoreListSelfServicePolicies(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreGetSelfServicePolicy",
          "line": 1017,
          "signature": "def policystoreGetSelfServicePolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreCreateSelfServicePolicy",
          "line": 1078,
          "signature": "def policystoreCreateSelfServicePolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreUpdateSelfServicePolicy",
          "line": 1154,
          "signature": "def policystoreUpdateSelfServicePolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreDeleteSelfServicePolicy",
          "line": 1227,
          "signature": "def policystoreDeleteSelfServicePolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreGetPolicyCollections",
          "line": 1288,
          "signature": "def policystoreGetPolicyCollections(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreGetPolicyAssignments",
          "line": 1348,
          "signature": "def policystoreGetPolicyAssignments(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreCreatePolicyAssignment",
          "line": 1409,
          "signature": "def policystoreCreatePolicyAssignment(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreDeletePolicyAssignment",
          "line": 1486,
          "signature": "def policystoreDeletePolicyAssignment(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreGetPolicyEffects",
          "line": 1548,
          "signature": "def policystoreGetPolicyEffects(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreEvaluatePolicies",
          "line": 1609,
          "signature": "def policystoreEvaluatePolicies(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreGetUserPermissions",
          "line": 1665,
          "signature": "def policystoreGetUserPermissions(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreCheckAccess",
          "line": 1728,
          "signature": "def policystoreCheckAccess(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreGetPolicyTemplates",
          "line": 1784,
          "signature": "def policystoreGetPolicyTemplates(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreGetPolicyDefinitions",
          "line": 1844,
          "signature": "def policystoreGetPolicyDefinitions(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreCreatePolicyDefinition",
          "line": 1904,
          "signature": "def policystoreCreatePolicyDefinition(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreListRoleAssignments",
          "line": 1982,
          "signature": "def policystoreListRoleAssignments(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreCreateRoleAssignment",
          "line": 2043,
          "signature": "def policystoreCreateRoleAssignment(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreDeleteRoleAssignment",
          "line": 2119,
          "signature": "def policystoreDeleteRoleAssignment(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreGetRoleDefinitions",
          "line": 2178,
          "signature": "def policystoreGetRoleDefinitions(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreListDataAccessPolicies",
          "line": 2240,
          "signature": "def policystoreListDataAccessPolicies(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreGetDataAccessPolicy",
          "line": 2299,
          "signature": "def policystoreGetDataAccessPolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreCreateDataAccessPolicy",
          "line": 2360,
          "signature": "def policystoreCreateDataAccessPolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreGetPolicyAuditLogs",
          "line": 2438,
          "signature": "def policystoreGetPolicyAuditLogs(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreGetComplianceReport",
          "line": 2502,
          "signature": "def policystoreGetComplianceReport(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreBulkPolicyOperation",
          "line": 2566,
          "signature": "def policystoreBulkPolicyOperation(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreValidatePolicy",
          "line": 2626,
          "signature": "def policystoreValidatePolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreSimulatePolicy",
          "line": 2680,
          "signature": "def policystoreSimulatePolicy(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreGetPolicyChanges",
          "line": 2734,
          "signature": "def policystoreGetPolicyChanges(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreExportPolicies",
          "line": 2795,
          "signature": "def policystoreExportPolicies(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "policystoreImportPolicies",
          "line": 2858,
          "signature": "def policystoreImportPolicies(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        }
      ]
    },
    "_management.py": {
      "file_path": "purviewcli\\client\\_management.py",
      "classes": [
        "Management"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "managementListOperations",
          "line": 18,
          "signature": "def managementListOperations(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementCheckNameAvailability",
          "line": 79,
          "signature": "def managementCheckNameAvailability(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementReadAccounts",
          "line": 137,
          "signature": "def managementReadAccounts(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementReadAccount",
          "line": 203,
          "signature": "def managementReadAccount(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementCreateAccount",
          "line": 266,
          "signature": "def managementCreateAccount(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementUpdateAccount",
          "line": 344,
          "signature": "def managementUpdateAccount(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementDeleteAccount",
          "line": 419,
          "signature": "def managementDeleteAccount(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementGetAccessKeys",
          "line": 482,
          "signature": "def managementGetAccessKeys(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementRegenerateAccessKey",
          "line": 545,
          "signature": "def managementRegenerateAccessKey(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementListPrivateLinkResources",
          "line": 604,
          "signature": "def managementListPrivateLinkResources(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementGetPrivateLinkResource",
          "line": 666,
          "signature": "def managementGetPrivateLinkResource(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementListPrivateEndpointConnections",
          "line": 732,
          "signature": "def managementListPrivateEndpointConnections(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementGetPrivateEndpointConnection",
          "line": 794,
          "signature": "def managementGetPrivateEndpointConnection(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementCreateOrUpdatePrivateEndpointConnection",
          "line": 858,
          "signature": "def managementCreateOrUpdatePrivateEndpointConnection(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementDeletePrivateEndpointConnection",
          "line": 937,
          "signature": "def managementDeletePrivateEndpointConnection(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementGetAccountFeatures",
          "line": 1001,
          "signature": "def managementGetAccountFeatures(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementUpdateAccountFeatures",
          "line": 1064,
          "signature": "def managementUpdateAccountFeatures(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementGetIngestionStatus",
          "line": 1141,
          "signature": "def managementGetIngestionStatus(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementListResourceSets",
          "line": 1204,
          "signature": "def managementListResourceSets(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementGetSecuritySettings",
          "line": 1268,
          "signature": "def managementGetSecuritySettings(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementUpdateSecuritySettings",
          "line": 1331,
          "signature": "def managementUpdateSecuritySettings(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementGetDiagnosticSettings",
          "line": 1408,
          "signature": "def managementGetDiagnosticSettings(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementCreateOrUpdateDiagnosticSettings",
          "line": 1471,
          "signature": "def managementCreateOrUpdateDiagnosticSettings(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementDeleteDiagnosticSetting",
          "line": 1550,
          "signature": "def managementDeleteDiagnosticSetting(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementGetAccountUsage",
          "line": 1627,
          "signature": "def managementGetAccountUsage(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementGetAccountMetrics",
          "line": 1690,
          "signature": "def managementGetAccountMetrics(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementGetAccountTags",
          "line": 1759,
          "signature": "def managementGetAccountTags(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementUpdateAccountTags",
          "line": 1822,
          "signature": "def managementUpdateAccountTags(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementListAccountsBySubscription",
          "line": 1899,
          "signature": "def managementListAccountsBySubscription(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementGetSubscriptionUsage",
          "line": 1959,
          "signature": "def managementGetSubscriptionUsage(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementGetAccountStatus",
          "line": 2022,
          "signature": "def managementGetAccountStatus(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementValidateAccountConfiguration",
          "line": 2085,
          "signature": "def managementValidateAccountConfiguration(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "managementGetAccountHealth",
          "line": 2142,
          "signature": "def managementGetAccountHealth(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        }
      ]
    },
    "_account.py": {
      "file_path": "purviewcli\\client\\_account.py",
      "classes": [
        "Account"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "accountRead",
          "line": 29,
          "signature": "def accountRead(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountUpdate",
          "line": 89,
          "signature": "def accountUpdate(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountReadAccessKeys",
          "line": 163,
          "signature": "def accountReadAccessKeys(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountRegenerateAccessKey",
          "line": 223,
          "signature": "def accountRegenerateAccessKey(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountReadInfo",
          "line": 283,
          "signature": "def accountReadInfo(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountReadSettings",
          "line": 347,
          "signature": "def accountReadSettings(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountUpdateSettings",
          "line": 407,
          "signature": "def accountUpdateSettings(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountReadUsage",
          "line": 479,
          "signature": "def accountReadUsage(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountReadLimits",
          "line": 545,
          "signature": "def accountReadLimits(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountReadAnalytics",
          "line": 608,
          "signature": "def accountReadAnalytics(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountReadConfiguration",
          "line": 677,
          "signature": "def accountReadConfiguration(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountUpdateConfiguration",
          "line": 741,
          "signature": "def accountUpdateConfiguration(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountValidateConfiguration",
          "line": 813,
          "signature": "def accountValidateConfiguration(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountReadSecuritySettings",
          "line": 869,
          "signature": "def accountReadSecuritySettings(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountUpdateSecuritySettings",
          "line": 929,
          "signature": "def accountUpdateSecuritySettings(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountReadAuditLogs",
          "line": 1001,
          "signature": "def accountReadAuditLogs(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountReadNetworkSettings",
          "line": 1071,
          "signature": "def accountReadNetworkSettings(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountUpdateNetworkSettings",
          "line": 1131,
          "signature": "def accountUpdateNetworkSettings(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountReadPrivateEndpoints",
          "line": 1203,
          "signature": "def accountReadPrivateEndpoints(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountBackup",
          "line": 1268,
          "signature": "def accountBackup(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountRestore",
          "line": 1326,
          "signature": "def accountRestore(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountReadBackups",
          "line": 1384,
          "signature": "def accountReadBackups(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountReadHealth",
          "line": 1453,
          "signature": "def accountReadHealth(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountReadMetrics",
          "line": 1517,
          "signature": "def accountReadMetrics(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountGenerateReport",
          "line": 1584,
          "signature": "def accountGenerateReport(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountGet",
          "line": 1644,
          "signature": "def accountGet(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountGetAccessKeys",
          "line": 1702,
          "signature": "def accountGetAccessKeys(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountRegenerateKey",
          "line": 1760,
          "signature": "def accountRegenerateKey(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "accountPut",
          "line": 1811,
          "signature": "def accountPut(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        }
      ]
    },
    "_health.py": {
      "file_path": "purviewcli\\client\\_health.py",
      "classes": [
        "Health"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "query_health_actions",
          "line": 25,
          "signature": "def query_health_actions(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_health_action",
          "line": 108,
          "signature": "def get_health_action(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "update_health_action",
          "line": 170,
          "signature": "def update_health_action(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "delete_health_action",
          "line": 259,
          "signature": "def delete_health_action(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "get_health_summary",
          "line": 323,
          "signature": "def get_health_summary(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "help",
          "line": 392,
          "signature": "def help(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        }
      ]
    },
    "_insight.py": {
      "file_path": "purviewcli\\client\\_insight.py",
      "classes": [
        "Insight"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "insightAssetDistribution",
          "line": 18,
          "signature": "def insightAssetDistribution(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightAssetDistributionByType",
          "line": 89,
          "signature": "def insightAssetDistributionByType(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightAssetDistributionByClassification",
          "line": 160,
          "signature": "def insightAssetDistributionByClassification(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightAssetDistributionByCollection",
          "line": 231,
          "signature": "def insightAssetDistributionByCollection(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightFilesWithoutResourceSet",
          "line": 304,
          "signature": "def insightFilesWithoutResourceSet(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightFilesAggregation",
          "line": 375,
          "signature": "def insightFilesAggregation(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightResourceSetDetails",
          "line": 428,
          "signature": "def insightResourceSetDetails(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightResourceSetSummary",
          "line": 501,
          "signature": "def insightResourceSetSummary(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightTags",
          "line": 574,
          "signature": "def insightTags(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightTagsTimeSeries",
          "line": 627,
          "signature": "def insightTagsTimeSeries(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightClassificationDistribution",
          "line": 682,
          "signature": "def insightClassificationDistribution(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightSensitivityLabels",
          "line": 735,
          "signature": "def insightSensitivityLabels(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightScanStatusSummary",
          "line": 790,
          "signature": "def insightScanStatusSummary(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightScanStatusSummaryByTs",
          "line": 845,
          "signature": "def insightScanStatusSummaryByTs(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightScanPerformance",
          "line": 900,
          "signature": "def insightScanPerformance(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightScanHistory",
          "line": 955,
          "signature": "def insightScanHistory(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightDataQualityOverview",
          "line": 1014,
          "signature": "def insightDataQualityOverview(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightDataQualityBySource",
          "line": 1067,
          "signature": "def insightDataQualityBySource(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightDataQualityTrends",
          "line": 1120,
          "signature": "def insightDataQualityTrends(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightDataProfileSummary",
          "line": 1175,
          "signature": "def insightDataProfileSummary(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightGlossaryUsage",
          "line": 1230,
          "signature": "def insightGlossaryUsage(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightBusinessGlossaryHealth",
          "line": 1283,
          "signature": "def insightBusinessGlossaryHealth(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightTermAssignmentCoverage",
          "line": 1336,
          "signature": "def insightTermAssignmentCoverage(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightLineageCoverage",
          "line": 1391,
          "signature": "def insightLineageCoverage(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightLineageComplexity",
          "line": 1444,
          "signature": "def insightLineageComplexity(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightDataMovementPatterns",
          "line": 1497,
          "signature": "def insightDataMovementPatterns(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightUserActivity",
          "line": 1552,
          "signature": "def insightUserActivity(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightSearchPatterns",
          "line": 1607,
          "signature": "def insightSearchPatterns(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightAssetPopularity",
          "line": 1665,
          "signature": "def insightAssetPopularity(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightCollectionActivity",
          "line": 1738,
          "signature": "def insightCollectionActivity(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightAccessPatterns",
          "line": 1793,
          "signature": "def insightAccessPatterns(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightPermissionUsage",
          "line": 1846,
          "signature": "def insightPermissionUsage(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightCustomReport",
          "line": 1901,
          "signature": "def insightCustomReport(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightScheduledReports",
          "line": 1955,
          "signature": "def insightScheduledReports(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightCreateScheduledReport",
          "line": 2008,
          "signature": "def insightCreateScheduledReport(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightExportData",
          "line": 2083,
          "signature": "def insightExportData(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightDataGrowthTrends",
          "line": 2149,
          "signature": "def insightDataGrowthTrends(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightComplianceMetrics",
          "line": 2204,
          "signature": "def insightComplianceMetrics(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightDataStewardshipHealth",
          "line": 2257,
          "signature": "def insightDataStewardshipHealth(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightAssetHealthScore",
          "line": 2310,
          "signature": "def insightAssetHealthScore(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightSystemPerformance",
          "line": 2385,
          "signature": "def insightSystemPerformance(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightResourceUtilization",
          "line": 2438,
          "signature": "def insightResourceUtilization(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightOptimizationRecommendations",
          "line": 2491,
          "signature": "def insightOptimizationRecommendations(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightRealTimeMetrics",
          "line": 2546,
          "signature": "def insightRealTimeMetrics(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightLiveActivityFeed",
          "line": 2599,
          "signature": "def insightLiveActivityFeed(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightActiveScans",
          "line": 2654,
          "signature": "def insightActiveScans(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightHistoricalTrends",
          "line": 2709,
          "signature": "def insightHistoricalTrends(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightDataArchival",
          "line": 2768,
          "signature": "def insightDataArchival(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        },
        {
          "name": "insightVersionHistory",
          "line": 2821,
          "signature": "def insightVersionHistory(self, args)",
          "has_docs": true,
          "missing": [],
          "is_async": false
        }
      ]
    },
    "_share.py": {
      "file_path": "purviewcli\\client\\_share.py",
      "classes": [
        "Share"
      ],
      "has_module_docstring": false,
      "methods": [
        {
          "name": "shareListAcceptedShares",
          "line": 11,
          "signature": "def shareListAcceptedShares(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareGetAcceptedShare",
          "line": 18,
          "signature": "def shareGetAcceptedShare(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareReinstateAcceptedShare",
          "line": 29,
          "signature": "def shareReinstateAcceptedShare(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareRevokeAcceptedShare",
          "line": 41,
          "signature": "def shareRevokeAcceptedShare(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareUpdateExpirationAcceptedShare",
          "line": 52,
          "signature": "def shareUpdateExpirationAcceptedShare(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareListAssetMappings",
          "line": 64,
          "signature": "def shareListAssetMappings(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareCreateAssetMapping",
          "line": 71,
          "signature": "def shareCreateAssetMapping(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareDeleteAssetMapping",
          "line": 83,
          "signature": "def shareDeleteAssetMapping(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareGetAssetMapping",
          "line": 94,
          "signature": "def shareGetAssetMapping(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareListAssets",
          "line": 105,
          "signature": "def shareListAssets(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareCreateAsset",
          "line": 112,
          "signature": "def shareCreateAsset(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareDeleteAsset",
          "line": 124,
          "signature": "def shareDeleteAsset(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareGetAsset",
          "line": 135,
          "signature": "def shareGetAsset(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareActivateEmail",
          "line": 146,
          "signature": "def shareActivateEmail(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareRegisterEmail",
          "line": 153,
          "signature": "def shareRegisterEmail(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareListReceivedAssets",
          "line": 159,
          "signature": "def shareListReceivedAssets(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareListReceivedInvitations",
          "line": 166,
          "signature": "def shareListReceivedInvitations(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareGetReceivedInvitation",
          "line": 172,
          "signature": "def shareGetReceivedInvitation(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareRejectReceivedInvitation",
          "line": 179,
          "signature": "def shareRejectReceivedInvitation(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareListReceivedShares",
          "line": 187,
          "signature": "def shareListReceivedShares(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareCreateReceivedShare",
          "line": 193,
          "signature": "def shareCreateReceivedShare(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareDeleteReceivedShare",
          "line": 201,
          "signature": "def shareDeleteReceivedShare(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareGetReceivedShare",
          "line": 208,
          "signature": "def shareGetReceivedShare(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareListSentInvitations",
          "line": 215,
          "signature": "def shareListSentInvitations(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareCreateSentInvitation",
          "line": 222,
          "signature": "def shareCreateSentInvitation(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareDeleteSentInvitation",
          "line": 231,
          "signature": "def shareDeleteSentInvitation(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareGetSentInvitation",
          "line": 239,
          "signature": "def shareGetSentInvitation(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareListSentShares",
          "line": 247,
          "signature": "def shareListSentShares(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareCreateSentShare",
          "line": 253,
          "signature": "def shareCreateSentShare(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareDeleteSentShare",
          "line": 261,
          "signature": "def shareDeleteSentShare(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        },
        {
          "name": "shareGetSentShare",
          "line": 268,
          "signature": "def shareGetSentShare(self, args)",
          "has_docs": false,
          "missing": [
            "All sections missing"
          ],
          "is_async": false
        }
      ]
    },
    "api_client.py": {
      "file_path": "purviewcli\\client\\api_client.py",
      "classes": [
        "PurviewConfig",
        "PurviewClient",
        "BatchOperationProgress"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "get_entity",
          "line": 130,
          "signature": "async def get_entity(self, guid: str) -> Dict",
          "has_docs": true,
          "missing": [
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "create_entity",
          "line": 157,
          "signature": "async def create_entity(self, entity_data: Dict) -> Dict",
          "has_docs": true,
          "missing": [
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "update_entity",
          "line": 190,
          "signature": "async def update_entity(self, entity_data: Dict) -> Dict",
          "has_docs": true,
          "missing": [
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "delete_entity",
          "line": 217,
          "signature": "async def delete_entity(self, guid: str) -> Dict",
          "has_docs": true,
          "missing": [
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "search_entities",
          "line": 239,
          "signature": "async def search_entities(self, query: str) -> Dict",
          "has_docs": true,
          "missing": [
            "Exception documentation",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "batch_create_entities",
          "line": 278,
          "signature": "async def batch_create_entities(self, entities: List[Dict], progress_callback) -> List[Dict]",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "batch_update_entities",
          "line": 304,
          "signature": "async def batch_update_entities(self, entities: List[Dict], progress_callback) -> List[Dict]",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "import_entities_from_csv",
          "line": 331,
          "signature": "async def import_entities_from_csv(self, csv_file_path: str, mapping_config: Dict) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "export_entities_to_csv",
          "line": 343,
          "signature": "async def export_entities_to_csv(self, query: str, csv_file_path: str, columns: List[str]) -> str",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "get_glossary_terms",
          "line": 409,
          "signature": "async def get_glossary_terms(self, glossary_guid: str) -> List[Dict]",
          "has_docs": true,
          "missing": [
            "Exception documentation",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "create_glossary_term",
          "line": 446,
          "signature": "async def create_glossary_term(self, term_data: Dict) -> Dict",
          "has_docs": true,
          "missing": [
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "assign_term_to_entities",
          "line": 484,
          "signature": "async def assign_term_to_entities(self, term_guid: str, entity_guids: List[str]) -> Dict",
          "has_docs": true,
          "missing": [
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "get_asset_distribution",
          "line": 519,
          "signature": "async def get_asset_distribution(self) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "update_account_properties",
          "line": 528,
          "signature": "async def update_account_properties(self, account_data: Dict) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "get_access_keys",
          "line": 535,
          "signature": "async def get_access_keys(self) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "regenerate_access_key",
          "line": 540,
          "signature": "async def regenerate_access_key(self, key_data: Dict) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "list_collections",
          "line": 549,
          "signature": "async def list_collections(self) -> List[Dict]",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Exception documentation",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "get_collection",
          "line": 574,
          "signature": "async def get_collection(self, collection_name: str) -> Dict",
          "has_docs": true,
          "missing": [
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "create_collection",
          "line": 597,
          "signature": "async def create_collection(self, collection_name: str, collection_data: Dict) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "update_collection",
          "line": 605,
          "signature": "async def update_collection(self, collection_name: str, collection_data: Dict) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "create_or_update_collection",
          "line": 613,
          "signature": "async def create_or_update_collection(self, collection_name: str, collection_data: Dict) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "delete_collection",
          "line": 623,
          "signature": "async def delete_collection(self, collection_name: str) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "get_collection_path",
          "line": 631,
          "signature": "async def get_collection_path(self, collection_name: str) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "get_child_collection_names",
          "line": 639,
          "signature": "async def get_child_collection_names(self, collection_name: str) -> List[str]",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "get_lineage",
          "line": 648,
          "signature": "async def get_lineage(self, guid: str, direction: str, depth: int) -> Dict",
          "has_docs": true,
          "missing": [
            "Exception documentation"
          ],
          "is_async": true
        },
        {
          "name": "create_lineage",
          "line": 696,
          "signature": "async def create_lineage(self, lineage_data: Dict) -> Dict",
          "has_docs": true,
          "missing": [
            "Exception documentation",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "import_collections_from_csv",
          "line": 735,
          "signature": "async def import_collections_from_csv(self, csv_file_path: str, progress_callback) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "export_collections_to_csv",
          "line": 798,
          "signature": "async def export_collections_to_csv(self, csv_file_path: str, include_hierarchy: bool, include_metadata: bool) -> str",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "update",
          "line": 867,
          "signature": "def update(self, processed: int, total: int)",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": false
        }
      ]
    },
    "data_quality.py": {
      "file_path": "purviewcli\\client\\data_quality.py",
      "classes": [
        "ValidationSeverity",
        "ValidationRule",
        "ValidationResult",
        "DataQualityValidator",
        "DataQualityReport"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "add_rule",
          "line": 88,
          "signature": "def add_rule(self, rule: ValidationRule)",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": false
        },
        {
          "name": "remove_rule",
          "line": 92,
          "signature": "def remove_rule(self, rule_name: str)",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": false
        },
        {
          "name": "validate_dataframe",
          "line": 96,
          "signature": "def validate_dataframe(self, df: pd.DataFrame, column_rules: Dict[str, List[str]]) -> List[ValidationResult]",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": false
        },
        {
          "name": "validate_entity_data",
          "line": 114,
          "signature": "def validate_entity_data(self, entity_data: Dict[str, Any]) -> List[ValidationResult]",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": false
        },
        {
          "name": "generate_report",
          "line": 290,
          "signature": "def generate_report(validation_results: List[ValidationResult]) -> Dict[str, Any]",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": false
        },
        {
          "name": "export_report_to_csv",
          "line": 362,
          "signature": "def export_report_to_csv(report: Dict[str, Any], output_file: str)",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": false
        }
      ]
    },
    "scanning_operations.py": {
      "file_path": "purviewcli\\client\\scanning_operations.py",
      "classes": [
        "ScanningManager",
        "ScanTemplateManager"
      ],
      "has_module_docstring": true,
      "methods": [
        {
          "name": "create_data_source",
          "line": 35,
          "signature": "async def create_data_source(self, data_source_config: Dict) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "get_data_sources",
          "line": 40,
          "signature": "async def get_data_sources(self) -> List[Dict]",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "create_scan",
          "line": 46,
          "signature": "async def create_scan(self, data_source_name: str, scan_config: Dict) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "run_scan",
          "line": 51,
          "signature": "async def run_scan(self, data_source_name: str, scan_name: str) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "get_scan_status",
          "line": 56,
          "signature": "async def get_scan_status(self, data_source_name: str, scan_name: str, run_id: str) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "get_scan_history",
          "line": 61,
          "signature": "async def get_scan_history(self, data_source_name: str, scan_name: str) -> List[Dict]",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "bulk_create_data_sources",
          "line": 67,
          "signature": "async def bulk_create_data_sources(self, sources_config: List[Dict], progress_callback: Optional[Callable]) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "bulk_run_scans",
          "line": 95,
          "signature": "async def bulk_run_scans(self, scan_configs: List[Dict], monitor_progress: bool) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "generate_scan_report",
          "line": 185,
          "signature": "async def generate_scan_report(self, output_file: str, days_back: int) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "optimize_scan_schedules",
          "line": 288,
          "signature": "async def optimize_scan_schedules(self) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": true
        },
        {
          "name": "create_data_source_config",
          "line": 410,
          "signature": "def create_data_source_config(self, template_name: str) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": false
        },
        {
          "name": "create_scan_config",
          "line": 433,
          "signature": "def create_scan_config(self, scan_name: str, scan_ruleset: str) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": false
        },
        {
          "name": "save_template",
          "line": 449,
          "signature": "def save_template(self, name: str, template: Dict, file_path: str)",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": false
        },
        {
          "name": "load_template_from_file",
          "line": 457,
          "signature": "def load_template_from_file(self, file_path: str) -> Dict",
          "has_docs": false,
          "missing": [
            "Parameter documentation",
            "Return value documentation",
            "Exception documentation",
            "Usage examples",
            "Use case documentation"
          ],
          "is_async": false
        }
      ]
    }
  }
}